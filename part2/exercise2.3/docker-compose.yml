version: '3.8'

services:
  example-frontend:
    build:
      context: ./example-frontend
      args:
        - REACT_APP_BACKEND_URL=http://localhost:8080
    container_name: frontend-app
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
    ports:
      - 5000:5000
  
  example-backend:
    build: ./example-backend
    container_name: backend-app
    environment:
      - PORT=8080
      - REQUEST_ORIGIN=http://localhost:5000
    ports:
      - 8080:8080


# version: '3.8'

# services:
#   web:
#     image: nginx
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - example-frontend
#       - example-backend
#     ports:
#       - "80:80"
#     networks:
#       - app-network

#   db:
#     image: postgres:13.2-alpine
#     restart: unless-stopped
#     ports:
#       - '5432:5432'
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     volumes:
#       - ./database:/var/lib/postgresql/data
#     networks:
#       - app-network

#   cache:
#     image: redis:7.2-alpine
#     ports:
#       - '6379:6379'
#     networks:
#       - app-network
      
#   example-frontend:
#     build:
#       context: ./example-frontend
#       args:
#         - REACT_APP_BACKEND_URL=http://localhost/api
#     container_name: frontend-app
#     environment:
#       - REACT_APP_BACKEND_URL=http://localhost/api
    
#     networks:
#       - app-network

#   example-backend:
#     build: ./example-backend
#     container_name: backend-app
#     depends_on:
#       - db
#       - cache
#     environment:
#       - PORT=8080
#       - REQUEST_ORIGIN=http://localhost
#       - REDIS_HOST=cache
#       - POSTGRES_HOST=db 
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DATABASE=postgres
    
#     networks:
#       - app-network

# networks:
#   app-network:
#     name: app-network

# volumes:
#   database: